<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-17T20:55:35 IST" name="Test1" finished-at="2024-07-17T20:55:35 IST" duration-ms="70">
    <groups>
      <group name="smoke">
        <method signature="TEst3.tEste3()[pri:0, instance:Testnglearn.TEst3@1d296da]" name="tEste3" class="Testnglearn.TEst3"/>
        <method signature="TEst2.TEste3()[pri:0, instance:Testnglearn.TEst2@75db5df9]" name="TEste3" class="Testnglearn.TEst2"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-07-17T20:55:35 IST" name="Test" finished-at="2024-07-17T20:55:35 IST" duration-ms="70">
      <class name="Testnglearn.TEst3">
        <test-method signature="CASE1(java.lang.String,java.lang.String)[pri:0, instance:Testnglearn.TEst3@1d296da]" started-at="2024-07-17T20:55:35 IST" name="CASE1" data-provider="getdata" finished-at="2024-07-17T20:55:35 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CASE1 -->
        <test-method signature="CASE1(java.lang.String,java.lang.String)[pri:0, instance:Testnglearn.TEst3@1d296da]" started-at="2024-07-17T20:55:35 IST" name="CASE1" data-provider="getdata" finished-at="2024-07-17T20:55:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CASE1 -->
        <test-method signature="CASE1(java.lang.String,java.lang.String)[pri:0, instance:Testnglearn.TEst3@1d296da]" started-at="2024-07-17T20:55:35 IST" name="CASE1" data-provider="getdata" finished-at="2024-07-17T20:55:35 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CASE1 -->
        <test-method signature="sfsfsfd(java.lang.String)[pri:0, instance:Testnglearn.TEst3@1d296da]" started-at="2024-07-17T20:55:35 IST" name="sfsfsfd" finished-at="2024-07-17T20:55:35 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kedar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sfsfsfd -->
        <test-method signature="tEste3()[pri:0, instance:Testnglearn.TEst3@1d296da]" started-at="2024-07-17T20:55:35 IST" name="tEste3" finished-at="2024-07-17T20:55:35 IST" duration-ms="11" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Testnglearn.TEst3.tEste3(TEst3.java:19)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tEste3 -->
      </class> <!-- Testnglearn.TEst3 -->
    </test> <!-- Test -->
    <test started-at="2024-07-17T20:55:35 IST" name="Test1" finished-at="2024-07-17T20:55:35 IST" duration-ms="58">
      <class name="Testnglearn.TEst2">
        <test-method is-config="true" signature="CASE3()[pri:0, instance:Testnglearn.TEst2@75db5df9]" started-at="2024-07-17T20:55:35 IST" name="CASE3" finished-at="2024-07-17T20:55:35 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CASE3 -->
        <test-method is-config="true" signature="TEste2()[pri:0, instance:Testnglearn.TEst2@75db5df9]" started-at="2024-07-17T20:55:35 IST" name="TEste2" finished-at="2024-07-17T20:55:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TEste2 -->
        <test-method signature="CASE1()[pri:0, instance:Testnglearn.TEst2@75db5df9]" started-at="2024-07-17T20:55:35 IST" name="CASE1" finished-at="2024-07-17T20:55:35 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CASE1 -->
        <test-method signature="TEste3()[pri:0, instance:Testnglearn.TEst2@75db5df9]" started-at="2024-07-17T20:55:35 IST" name="TEste3" finished-at="2024-07-17T20:55:35 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TEste3 -->
        <test-method is-config="true" signature="TEste2()[pri:0, instance:Testnglearn.TEst2@75db5df9]" started-at="2024-07-17T20:55:35 IST" name="TEste2" finished-at="2024-07-17T20:55:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TEste2 -->
        <test-method is-config="true" signature="CASE4()[pri:0, instance:Testnglearn.TEst2@75db5df9]" started-at="2024-07-17T20:55:35 IST" name="CASE4" finished-at="2024-07-17T20:55:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CASE4 -->
        <test-method is-config="true" signature="CASE2()[pri:0, instance:Testnglearn.TEst2@75db5df9]" started-at="2024-07-17T20:55:35 IST" name="CASE2" finished-at="2024-07-17T20:55:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CASE2 -->
      </class> <!-- Testnglearn.TEst2 -->
    </test> <!-- Test1 -->
  </suite> <!-- Test1 -->
</testng-results>
